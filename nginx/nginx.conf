upstream frontend {
    server frontend1:5173;
}

upstream backend {
    server igs-backend:8000;
}

# Local (commented out)
# server {
#     listen 80;
#     server_name mini-netumo.local www.mini-netumo.local;
#     return 301 https://$host$request_uri;
# }
#
# server {
#     listen 443 ssl;
#     server_name mini-netumo.local;
#
#     ssl_certificate /etc/letsencrypt/original_certs/fullchain1.pem;
#     ssl_certificate_key /etc/letsencrypt/original_certs/privkey1.pem;
#
#     location / {
#         proxy_pass http://frontend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
#
#     location /api/ {
#         proxy_pass http://backend/api/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host;
#         proxy_set_header X-Forwarded-Port $server_port;
#     }
#
#     location /admin/ {
#         proxy_pass http://backend/admin/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host;
#         proxy_set_header X-Forwarded-Port $server_port;
#     }
#
#     location /static/ {
#         alias /app/staticfiles/;
#         expires 1y;
#         access_log off;
#         add_header Cache-Control "public";
#     }
#
#     location /media/ {
#         alias /app/media/;
#         expires 1y;
#         access_log off;
#         add_header Cache-Control "public";
#     }
#
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }
# }

# Production active below:

server {
    listen 80;
    server_name rental.seranise.co.tz www.rental.seranise.co.tz;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name rental.seranise.co.tz www.rental.seranise.co.tz;

    ssl_certificate /etc/letsencrypt/live/rental.seranise.co.tz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rental.seranise.co.tz/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/rental.seranise.co.tz/chain.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api/v2/ {
        proxy_pass http://backend/api/v2/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location /admin/ {
        proxy_pass http://backend/admin/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location /static/ {
        alias /app/staticfiles/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    location /media/ {
        alias /app/media/;
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
