version: "3.9"

services:
  db:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./volume/data/db:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - rental

  backend:
    image: seranise/igs_backend:latest
    container_name: igs-backend
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn igs_backend.wsgi --bind 0.0.0.0:8000"
    volumes:
      - ./volume/static_files:/app/staticfiles
      - ./volume/media_files:/app/media
      - ./igs_backend:/app
    env_file:
      - ./igs_backend/.env
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - rental

  cron:
    image: seranise/igs_backend:latest
    container_name: igs-cron
    command: sh -c "python manage.py crontab add && crond -f"
    volumes:
      - ./volume/static_files:/app/staticfiles
      - ./volume/media_files:/app/media
      - ./igs_backend:/app
    depends_on:
      - backend
    networks:
      - rental

  frontend1:
    image: seranise/kedesh_client:latest
    container_name: frontend1
    environment:
      - VITE_NODE_ID=frontend1
    ports:
      - "3000:5173"
    depends_on:
      - backend
    networks:
      - rental

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volume/static_files:/app/staticfiles:ro
      - ./volume/media_files:/app/media:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt/live/rental.seranise.co.tz/fullchain.pem:/etc/letsencrypt/live/rental.seranise.co.tz/fullchain.pem:ro
      - /etc/letsencrypt/live/rental.seranise.co.tz/privkey.pem:/etc/letsencrypt/live/rental.seranise.co.tz/privkey.pem:ro
      - /etc/letsencrypt/live/rental.seranise.co.tz/chain.pem:/etc/letsencrypt/live/rental.seranise.co.tz/chain.pem:ro
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/letsencrypt/options-ssl-nginx.conf:ro
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/letsencrypt/ssl-dhparams.pem:ro
    depends_on:
      - frontend1
      - backend
    networks:
      - rental

networks:
  rental:
    driver: bridge
